openapi: 3.0.3

# Basic info
info:
  description: |
    Kochava provides the Ads Measurement system as a venue for publishers to send their data for usage alongside all of our standard measurement tools.  
    
    Getting started with Ads Measurement involves working with an onboarding specialist in order to get your account set up. 
    Once that is complete you can begin developer integration as defined in the developer guide using this API spec as a reference.
  version: 0.3.0
  title: Kochava for Publishers | API Spec
  termsOfService: https://www.kochava.com/legal/terms-of-service
  contact:
    name: Kochava Support
    email: pubsuite@kochava.com

# Servers
servers:
  - url: https://{subdomain}.adsmeasurement.com
    variables:
      subdomain:
        default: subdomain
        description: Your account specific subdomain

# Tags for each section
tags:
  - name: ingestion
    description: Send impressions and clicks

  - name: attribution
    description: Request attribution and validate claims

# Endpoints
paths:

  # Send an impression
  /v1/impression:
    get:
      tags:
        - ingestion
      summary: Send an impression to Kochava
      description: |
        The following specifications define how to build an impression request and send it to the Ads Measurement system.
            
        The parameters should be sent as query parameters on the URL. Required keys are indicated and entries marked with Fingerprint or 
        Device are also required for those specific attribution types.
            
        For fingerprint attribution if the request is coming from the client device those parameters can be omitted and will instead be scraped 
        from the HTTP header of the request.
            
        For device attribution each identifier should be added as its own query parameters using its type as the key. 
        Some examples are listed in the table however the list of allowed types is defined as part of your account creation.
        
        The response status codes will indicate if the request was successful and if not, what went wrong. 
        On 4XX responses a text/plain response body will be returned with additional details about the error. 
        It is important that you detect and correct any errors when a 4XX status code is returned before attempting the request again. 
        In the case of a 5XX error code you may retry following an exponential backoff pattern.
      operationId: impression
      security:
        - apiKeyIngestionHeader: [ ]
        - apiKeyIngestionQueryParam: [ ]
      parameters:
        - $ref: "#/components/parameters/productParam"
        - $ref: "#/components/parameters/timestampParam"
        - $ref: "#/components/parameters/ipParam"
        - $ref: "#/components/parameters/useragentParam"
        - $ref: "#/components/parameters/deviceIdsParam"
        - $ref: "#/components/parameters/campaignGroupParam"
        - $ref: "#/components/parameters/campaignNameParam"
        - $ref: "#/components/parameters/campaignIdParam"
        - $ref: "#/components/parameters/creativeNameParam"
        - $ref: "#/components/parameters/creativeIdParam"
        - $ref: "#/components/parameters/countryParam"
        - $ref: "#/components/parameters/platformParam"
        - $ref: "#/components/parameters/deviceModelParam"
        - $ref: "#/components/parameters/osNameParam"
        - $ref: "#/components/parameters/osVersionParam"
        - $ref: "#/components/parameters/siteIdParam"
        - $ref: "#/components/parameters/siteNameParam"
        - $ref: "#/components/parameters/adTypeParam"
        - $ref: "#/components/parameters/adSizeParam"
        - $ref: "#/components/parameters/keywordParam"
        - $ref: "#/components/parameters/keywordIdParam"
        - $ref: "#/components/parameters/costCurrencyParam"
        - $ref: "#/components/parameters/costAmountParam"
        - $ref: "#/components/parameters/bidTypeParam"
        - $ref: "#/components/parameters/bidAmountParam"
        - $ref: "#/components/parameters/bidStrategyParam"
        - $ref: "#/components/parameters/objectiveParam"
        - $ref: "#/components/parameters/propertiesParam"
      responses:
        "200":
          $ref: "#/components/responses/ingestion-200"
        "400":
          $ref: "#/components/responses/ingestion-400"
        "401":
          $ref: "#/components/responses/ingestion-401"
        "403":
          $ref: "#/components/responses/ingestion-403"
        "500":
          $ref: "#/components/responses/ingestion-5XX"

  # Send a click
  /v1/click:
    get:
      tags:
        - ingestion
      summary: Send a click to Kochava
      description: |
        The following specifications define how to build a click request and send it to the Ads Measurement system.
        
        The parameters should be sent as query parameters on the URL. Required keys are indicated and entries marked with Fingerprint or 
        Device are also required for those specific attribution types.
        
        For fingerprint attribution if the request is coming from the client device those parameters can be omitted and will instead be scraped 
        from the HTTP header of the request.
        
        For device attribution each identifier should be added as its own query parameters using its type as the key. 
        Some examples are listed in the table however the list of allowed types is defined as part of your account creation.
            
        The response status codes will indicate if the request was successful and if not, what went wrong. 
        On 4XX responses a text/plain response body will be returned with additional details about the error. 
        It is important that you detect and correct any errors when a 4XX status code is returned before attempting the request again. 
        In the case of a 5XX error code you may retry following an exponential backoff pattern.
      operationId: click
      security:
        - apiKeyIngestionHeader: [ ]
        - apiKeyIngestionQueryParam: [ ]
      parameters:
        - $ref: "#/components/parameters/productParam"
        - $ref: "#/components/parameters/timestampParam"
        - $ref: "#/components/parameters/ipParam"
        - $ref: "#/components/parameters/useragentParam"
        - $ref: "#/components/parameters/deviceIdsParam"
        - $ref: "#/components/parameters/campaignGroupParam"
        - $ref: "#/components/parameters/campaignNameParam"
        - $ref: "#/components/parameters/campaignIdParam"
        - $ref: "#/components/parameters/creativeNameParam"
        - $ref: "#/components/parameters/creativeIdParam"
        - $ref: "#/components/parameters/countryParam"
        - $ref: "#/components/parameters/platformParam"
        - $ref: "#/components/parameters/deviceModelParam"
        - $ref: "#/components/parameters/osNameParam"
        - $ref: "#/components/parameters/osVersionParam"
        - $ref: "#/components/parameters/siteIdParam"
        - $ref: "#/components/parameters/siteNameParam"
        - $ref: "#/components/parameters/adTypeParam"
        - $ref: "#/components/parameters/adSizeParam"
        - $ref: "#/components/parameters/keywordParam"
        - $ref: "#/components/parameters/keywordIdParam"
        - $ref: "#/components/parameters/costCurrencyParam"
        - $ref: "#/components/parameters/costAmountParam"
        - $ref: "#/components/parameters/bidTypeParam"
        - $ref: "#/components/parameters/bidAmountParam"
        - $ref: "#/components/parameters/bidStrategyParam"
        - $ref: "#/components/parameters/objectiveParam"
        - $ref: "#/components/parameters/propertiesParam"
      responses:
        "200":
          $ref: "#/components/responses/ingestion-200"
        "400":
          $ref: "#/components/responses/ingestion-400"
        "401":
          $ref: "#/components/responses/ingestion-401"
        "403":
          $ref: "#/components/responses/ingestion-403"
        "500":
          $ref: "#/components/responses/ingestion-5XX"

  # Report activity and retrieve attribution
  /v1/attribution:
    post:
      tags:
        - attribution
      summary: Report activity and request attribution
      description: |
        The following specifications define how to build an attribution request and send it to the Ads Measurement system in order to request attribution results.
            
        The request body should be sent as a JSON object with the following key value pairs. 
        Required keys are indicated and entries marked with Fingerprint or Device are also required if you are attempting to match to those attribution types.
            
        The response status codes will indicate if the request was successful and if not, what went wrong. 
        It is important that you detect and correct any errors when a 4XX status code is returned before attempting the request again. 
        In the case of a 5XX error code you may retry following an exponential backoff pattern.
            
        The response body indicates if the activity attributed and if it did attribute what it matched by and any additional metadata associated 
        with with impression or click. Every field will always be returned however fields marked as nullable in the table below will have a null 
        value if unattributed.
            
        A transaction ID header will be returned which can be used with the attribution xna request to arbitrate claims from an MMP.
      operationId: attribution
      security:
        - apiKeyAttributionHeader: [ ]
      requestBody:
        description: Provide an attribution request body following the schema below.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/attributionRequest"
            examples:
              example1:
                summary: First Open with an IDFA
                value:
                  product: MyApp
                  partner: Kochava
                  timestamp: 1739909484
                  eventName: first_open
                  identifiers:
                    idfa: b3f182c6-743f-44eb-acc9-567f821967ce
              example2:
                summary: Purchase with IP and UA
                value:
                  product: MyApp
                  partner: Kochava
                  timestamp: 1739909484
                  eventName: purchase
                  userAgent: Dalvik/2.1.0 (Linux; U; Android 14; Pixel 8 Pro Build/AP2A.240905.003)
                  ip: 198.51.100.0
                  eventData:
                    price: "1.99"
                    currency: usd
      responses:
        "200":
          $ref: "#/components/responses/attribution-200"
        "400":
          $ref: "#/components/responses/attribution-400"
        "401":
          $ref: "#/components/responses/attribution-401"
        "500":
          $ref: "#/components/responses/attribution-5XX"

  # Report attribution claim status
  /v1/attribution/xna:
    post:
      tags:
        - attribution
      summary: Report attribution claim status
      description: |
        The following specifications define how to build an attribution xna request and send it to the Ads Measurement system in order to 
        arbitrate an attribution claim.
            
        The request body should be sent as a JSON object with the following key value pairs. 
        If the claim_status is not_accepted you must include a fail_reason from the provided list, otherwise omit the fail_reason.
            
        The response status codes will indicate if the request was successful and if not, what went wrong. 
        It is important that you detect and correct any errors when a 4XX status code is returned before attempting the request again. 
        In the case of a 5XX error code you may retry following an exponential backoff pattern.
      operationId: attributionxna
      security:
        - apiKeyAttributionHeader: [ ]
        - apiKeyAttributionXnaHeader: [ ]
      requestBody:
        description: Provide an attribution xna request body following the schema below.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/attributionXnaRequest"
            examples:
              example1:
                summary: The claim was accepted
                value:
                  request_id: c052d32c-5b51-4912-ba48-53e7185ca292
                  claim_status: validated_claim
              example2:
                summary: The claim was rejected for fraud
                value:
                  request_id: 11920bd6-5053-400b-b83d-7141051009e1
                  claim_status: not_accepted
                  fail_reason: fraud_detected
      responses:
        "200":
          $ref: "#/components/responses/attributionxna-200"
        "400":
          $ref: "#/components/responses/attributionxna-400"
        "401":
          $ref: "#/components/responses/attributionxna-401"
        "5XX":
          $ref: "#/components/responses/attributionxna-5XX"

# Reusable components to use within the spec
components:

  # Common responses
  responses:

    # Ingestion (Impressions & Clicks)
    "ingestion-200":
      description: OK
      headers:
        x-transaction-id:
          $ref: "#/components/headers/x-transaction-id"

    "ingestion-400":
      description: |
        Invalid Request  
        View the error message returned for more details and correct any issues before attempting again.
      content:
        text/plain:
          schema:
            type: string
            example: "invalid request: product is invalid"
      headers:
        x-transaction-id:
          $ref: "#/components/headers/x-transaction-id"

    "ingestion-401":
      description: |
        Authentication Missing  
        Verify your request authorization and correct any issues before attempting again.
      content:
        text/plain:
          schema:
            type: string
            example: "Authentication missing"
      headers:
        x-transaction-id:
          $ref: "#/components/headers/x-transaction-id"

    "ingestion-403":
      description: |
        Authentication Invalid  
        Verify your request authorization and correct any issues before attempting again.
      content:
        text/plain:
          schema:
            type: string
            example: "Authentication invalid"
      headers:
        x-transaction-id:
          $ref: "#/components/headers/x-transaction-id"

    "ingestion-5XX":
      description: |
        Unexpected Error  
        These errors should be retried following an exponential backoff.

    # Attribution
    "attribution-200":
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/attributionResponse"
          examples:
            example1:
              summary: Attributed to IP
              value:
                success: true
                attribution_mode: BMA
                type: click
                matched_by: ip
                matched_by_keys:
                  - ip
                metadata:
                  useragent: "Mozilla/5.0 (iPad; CPU OS 17_5_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148"
                match:
                  ip: 198.51.100.0
                  timestamp: 2025-02-21T18:33:05.066951677Z
            example2:
              summary: Did not Attribute
              value:
                success: false
                attribution_mode: CTA
                type: null
                matched_by: null
                matched_by_keys: null
                metadata: null
                match: null
      headers:
        x-transaction-id:
          $ref: "#/components/headers/x-transaction-id"

    "attribution-400":
      description: |
        Invalid Request  
        Verify your request body and correct any issues before attempting again.
      headers:
        x-transaction-id:
          $ref: "#/components/headers/x-transaction-id"

    "attribution-401":
      description: |
        Authentication Missing or Invalid  
        Verify your request authorization and correct any issues before attempting again.
      headers:
        x-transaction-id:
          $ref: "#/components/headers/x-transaction-id"

    "attribution-5XX":
      description: |
        Unexpected Error  
        These errors should be retried following an exponential backoff.

    # Attribution XNA
    "attributionxna-200":
      description: OK

    "attributionxna-400":
      description: |
        Invalid Request  
        Verify your request body and correct any issues before attempting again.

    "attributionxna-401":
      description: |
        Authentication Missing or Invalid  
        Verify your request authorization and correct any issues before attempting again.

    "attributionxna-5XX":
      description: |
        Unexpected Error  
        These errors should be retried following an exponential backoff.

  # Common auth rules
  securitySchemes:
    # Ingestion
    apiKeyIngestionHeader:
      type: apiKey
      in: header
      name: Authentication-Key
      description: The API key used for authentication with impressions and clicks placed in the header.

    apiKeyIngestionQueryParam:
      type: apiKey
      in: query
      name: api_key
      description: |
        The API key used for authentication with impressions and clicks optionally placed as a query parameter. 
        We suggest using the header version if possible.

    # Attribution
    apiKeyAttributionHeader:
      type: apiKey
      in: header
      name: Authentication-Key
      description: The API key used for authentication with attribution and attribution xna requests placed in the header.

    # Attribution XNA
    apiKeyAttributionXnaHeader:
      type: apiKey
      in: header
      name: Authentication-Key
      description: |
        The API key used for authentication with attribution xna requests placed in the header. 
        You may also use the attribution api key for xna requests.

  # Common headers
  headers:

    # "#/components/headers/x-transaction-id"
    x-transaction-id:
      schema:
        type: string
        maxLength: 128
        example: f07fd26f-d72f-48b7-b2b0-95a54e1071c1
      description: The ID of the transaction.

  # Common parameters
  parameters:

    # "#/components/parameters/productParam"
    productParam:
      name: product
      in: query
      description: |
        The case-sensitive string to use as the product identifier. 
        This must match with the product used in the attribution request.
      required: true
      schema:
        type: string
      example: MyApp

    # "#/components/parameters/timestampParam"
    timestampParam:
      name: timestamp
      in: query
      description: |
        The unix timestamp in seconds when the ad occurred.  
        This must be within the range of 1 year ago to 10 hours in the future. 
        We suggest always including this value but if omitted it will default to the ingestion time.
      required: true
      schema:
        type: integer
        format: int64
        minimum: 0
      example: 1739909484

    # "#/components/parameters/ipParam"
    ipParam:
      name: ip
      in: query
      description: |
        (Required for fingerprint attribution)  
        The ip address of the client device with support for ipv4 and ipv6.  
        If the request is coming from the client device this value can be omitted and it will be scraped from the HTTP header of the request.
      required: false
      schema:
        type: string
      example: 198.51.100.0

    # "#/components/parameters/useragentParam"
    useragentParam:
      name: useragent
      in: query
      description: |
        (Required for fingerprint attribution)  
        The user agent of the client device.  
        If the request is coming from the client device this value can be omitted and it will be scraped from the HTTP header of the request.
      required: false
      schema:
        type: string
        minLength: 1
        maxLength: 600
      example: Mozilla/5.0 (iPad; CPU OS 17_5_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148

    # "#/components/parameters/deviceIdsParam"
    deviceIdsParam:
      name: deviceids  # Arbitrary name
      in: query
      description: |
        (Required for device attribution)  
        The device identifier for the impression or click. 
        Each device identifier should be added as its own query parameter using its type as the key. 
        The allowed identifier types are defined when you create your account with some examples listed below.
      schema:
        type: object
        additionalProperties:
          type: string
          pattern: '^.*$'
        example:
          device_id: 77e8e5bd-98c6-4b88-841a-3b58d9f70a36
          adid: 010df6c6-df9e-450b-8073-3674c47080e5
          fire_adid: cf294046-977e-4199-a029-4c4a66bb5ff1
          oaid: 8538dcf2-3401-40bd-82c1-57c6b7f83b63
          idfa: b3f182c6-743f-44eb-acc9-567f821967ce
          idfv: 9c3693bb-3555-4bda-ae87-49a4dc75aac9
          vida: 551bdd38-41cc-4012-a59e-6e8766ec40fd
          waid: cdc6b29b-89ac-4af3-aba4-b74569b99546
          custom: 9ffa2ba2-d020-4aab-9e05-ca7023b6e635

    # "#/components/parameters/campaignGroupParam"
    campaignGroupParam:
      name: campaign_group
      in: query
      description: The account level ID.
      required: false
      schema:
        type: string
      example: "192097023948"

    # "#/components/parameters/campaignNameParam"
    campaignNameParam:
      name: campaign_name
      in: query
      description: The name of the campaign.
      required: false
      schema:
        type: string
      example: Campaign_XYZ_NA_2025

    # "#/components/parameters/campaignIdParam"
    campaignIdParam:
      name: campaign_id
      in: query
      description: The ID of the campaign.
      required: false
      schema:
        type: string
      example: "90927823827"

    # "#/components/parameters/creativeNameParam"
    creativeNameParam:
      name: creative_name
      in: query
      description: The name of the creative.
      required: false
      schema:
        type: string
      example: Banner_234_spring_NA_2025

    # "#/components/parameters/creativeIdParam"
    creativeIdParam:
      name: creative_id
      in: query
      description: The ID of the creative.
      required: false
      schema:
        type: string
      example: "098320394"

    # "#/components/parameters/countryParam"
    countryParam:
      name: country
      in: query
      description: The 2-Digit country code where the ad was served.
      required: false
      schema:
        type: string
      example: US

    # "#/components/parameters/platformParam"
    platformParam:
      name: platform
      in: query
      description: The platform of the device where the ad was served.
      required: false
      schema:
        type: string
      example: Android

    # "#/components/parameters/deviceModelParam"
    deviceModelParam:
      name: device_model
      in: query
      description: The device model of the device where the ad was served.
      required: false
      schema:
        type: string
      example: Pixel 8 Pro

    # "#/components/parameters/osNameParam"
    osNameParam:
      name: os_name
      in: query
      description: The name of the operating system of the device where the ad was served.
      required: false
      schema:
        type: string
      example: Android

    # "#/components/parameters/osVersionParam"
    osVersionParam:
      name: os_version
      in: query
      description: The operating system version of the device where the ad was served.
      required: false
      schema:
        type: string
      example: "18.3.1"

    # "#/components/parameters/siteIdParam"
    siteIdParam:
      name: site_id
      in: query
      description: The ID of the site that served the ad.
      required: false
      schema:
        type: string
      example: 2909asd9302

    # "#/components/parameters/siteNameParam"
    siteNameParam:
      name: site_name
      in: query
      description: The human-readable name of the site where the ad was served.
      required: false
      schema:
        type: string
      example: My App

    # "#/components/parameters/adTypeParam"
    adTypeParam:
      name: ad_type
      in: query
      description: The type of ad served.
      required: false
      schema:
        type: string
      example: Banner

    # "#/components/parameters/adSizeParam"
    adSizeParam:
      name: ad_size
      in: query
      description: The size of the ad served.
      required: false
      schema:
        type: string
      example: 320x50


    # "#/components/parameters/keywordParam"
    keywordParam:
      name: keyword
      in: query
      description: The keyword that triggered the ad served.
      required: false
      schema:
        type: string
      example: Sports

    # "#/components/parameters/keywordIdParam"
    keywordIdParam:
      name: keyword_id
      in: query
      description: The keyword ID that triggered the ad served.
      required: false
      schema:
        type: string
      example: 239dd8709

    # "#/components/parameters/costCurrencyParam"
    costCurrencyParam:
      name: cost_currency
      in: query
      description: The currency of the cost_amount.
      required: false
      schema:
        type: string
      example: usd

    # "#/components/parameters/costAmountParam"
    costAmountParam:
      name: cost_amount
      in: query
      description: The amount of the cost paid by the Advertiser.
      required: false
      schema:
        type: string
      example: "0.05"

    # "#/components/parameters/bidTypeParam"
    bidTypeParam:
      name: bid_type
      in: query
      description: The type of bid that won the ad placement.
      required: false
      schema:
        type: string
      example: cpm

    # "#/components/parameters/bidAmountParam"
    bidAmountParam:
      name: bid_amount
      in: query
      description: The amount the advertiser bid for the ad to be served.
      required: false
      schema:
        type: string
      example: "1.00"

    # "#/components/parameters/bidStrategyParam"
    bidStrategyParam:
      name: bid_strategy
      in: query
      description: The bid strategy of the ad placement.
      required: false
      schema:
        type: string
      example: incentivized

    # "#/components/parameters/objectiveParam"
    objectiveParam:
      name: objective
      in: query
      description: The objective of the ad placement.
      required: false
      schema:
        type: string
      example: User Acquisition

    # "#/components/parameters/propertiesParam"
    propertiesParam:
      name: properties
      in: query
      description: |
        A comma separated list of case-sensitive strings of additional properties.
        Each property has a max length of 64 characters.
      required: false
      schema:
        type: string
      example: MyAppiOS,MyAppAndroid

  # Common schemas
  schemas:

    # "#/components/schemas/attributionRequest"
    attributionRequest:
      description: |
        The request body to report user activity and request attribution.
        Pay close attention to parameters which may not always be required but which are required for specific types of attribution.
      type: object
      properties:
        product:
          type: string
          example: MyApp
          description: |
            The case-sensitive string to use as the product identifier.
            This must match with the product used in the impression or click.
        partner:
          type: string
          enum:
            - Adjust
            - Appsflyer
            - Kochava
            - Singular
            - Tenjin
          example: Kochava
          description: |
            The case-insensitive string of the attribution partner.
        timestamp:
          type: integer
          format: int64
          minimum: 0
          example: 1739909484
          description: The unix timestamp in seconds when the activity occurred.
        eventName:
          type: string
          enum:
            - first_open
            - session_start
            - trial
            - sign_up
            - subscription
            - checkout_start
            - level_complete
            - purchase
            - share_with_friend
            - ad_initiate
            - first_video_view
            - video_view
          example: first_open
          description: |
            The name of the event such as "first_open" or "purchase".  
            The provided list covers the most common events but you may have additional custom events specific for your account.
            Only the events provisioned for your account may be used.
        userAgent:
          type: string
          minLength: 1
          maxLength: 600
          example: "Mozilla/5.0 (iPad; CPU OS 17_5_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148"
          description: |
            (Required for fingerprint attribution)  
            The user agent of the client device.
        ip:
          type: string
          example: 198.51.100.0
          description: |
            (Required for fingerprint and IP attribution)  
            The ip address of the client device with support for ipv4 and ipv6.
        identifiers:
          type: object
          additionalProperties:
            type: string
          example:
            idfa: b3f182c6-743f-44eb-acc9-567f821967ce
          description: |
            (Required for device attribution)
            Device identifiers within a nested object to associate with the event.
            Allowed identifier types are configured when setting up your account.
        properties:
          type: array
          items:
            type: string
          example: MyAppiOS,MyAppAndroid
          description: |
            An array of case-sensitive strings of additional properties.
            Each property has a max length of 64 characters.
        limitAdTracking:
          type: boolean
          example: false
          description: A boolean to indicate if limit ad tracking is enabled on the device.
        eventData:
          $ref: "#/components/schemas/attributionRequestEventData"
      required:
        - product
        - partner
        - timestamp
        - eventName

    # "#/components/schemas/attributionRequestEventData"
    attributionRequestEventData:
      description: |
        Additional metadata within a nested object to associate with the event.
        Only the keys below may be used and all values must be sent as strings.
      type: object
      example:
        user_id: abcdef1234
        duration: 1234
      properties:
        partner_event_name:
          type: string
          description: The unmapped event name as sent by the advertiser
        user_id:
          type: string
          description: A unique identifier
        url:
          type: string
          description: The url
        duration:
          type: string
          description: The elapsed time
        user_name:
          type: string
          description: A unique user name
        description:
          type: string
          description: Detail about the event
        referral_from:
          type: string
          description: Source or referral attribute
        method:
          type: string
          description: The authentication method
        results:
          type: string
          description: The search results
        content_id:
          type: string
          description: The identifier(s) of the items purchased
        item_quantity:
          type: string
          description: The total amount of items
        sum:
          type: string
          description: The total amount of revenue
        price:
          type: string
          description: The total amount of revenue
        rating_value:
          type: string
          description: The rating value chosen
        max_rating_value:
          type: string
          description: The maximum possible rating value
        level:
          type: string
          description: The level that was achieved
        currency:
          type: string
          description: The currency used
        checkout_as_guest:
          type: string
          description: Any data related to the guest checkout status
        ad_type:
          type: string
          description: The type or identifier of the ad unit
        ad_network:
          type: string
          description: The ad network name
        ad_placement:
          type: string
          description: The location or placement of ad unit
        ad_mediation_name:
          type: string
          description: The name of the mediation provider
        ad_campaign_id:
          type: string
          description: The campaign id
        ad_campaign_name:
          type: string
          description: The campaign name
        ad_size:
          type: string
          description: The size of the ad unit
        app_guid:
          type: string
          description: The Kochava App GUID
        partner_app_id:
          type: string
          description: The partner app ID

    # "#/components/schemas/attributionResponse"
    attributionResponse:
      description: |
        The attribution response indicating if it was attributed and what those results are.
      type: object
      properties:
        success:
          type: boolean
          example: true
          description: True if the activity is attributed and false otherwise.
        attribution_mode:
          type: string
          enum:
            - VTA
            - CTA
            - BMA
          example: BMA
          description: |
            The attribution mode used, options are View-Through-Attribution (VTA) - only match to impressions, 
            Click Through Attribution (CTA) - only match to clicks, 
            and Best Match Attribution (BMA) - find best match treating impressions and clicks equally.
        type:
          type: string
          nullable: true
          enum:
            - impression
            - click
          example: click
          description: The ingestion type that this activity attributed to.
        matched_by:
          type: string
          nullable: true
          enum:
            - event_id
            - device_id
            - graph_id
            - fingerprint
            - ip
            - partial_ip
          example: ip
          description: The attribution type that this activity attributed to.
        matched_by_keys:
          type: array
          nullable: true
          items:
            type: string
          example:
            - ip
          description: The keys in the match object minus timestamp.
        metadata:
          type: object
          additionalProperties:
            type: string
          nullable: true
          example:
            useragent: "Mozilla/5.0 (iPad; CPU OS 17_5_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148"
          description: Contains the query parameter data found on the impression or click.
        match:
          type: object
          additionalProperties:
            type: string
          nullable: true
          example:
            ip: 198.51.100.0
            timestamp: 1739909484
            idfa: b3f182c6-743f-44eb-acc9-567f821967ce
          description: |
            Contains the key value pairs of the data used to match the impression or click.
            This includes the ip, timestamp, and any device identifier keys present.
      required:
        - success
        - attribution_mode
        - type
        - matched_by
        - matched_by_keys
        - metadata
        - match

    # "#/components/schemas/attributionXnaRequest"
    attributionXnaRequest:
      description: |
        The request body for an arbitration claim from an MMP.
      type: object
      properties:
        request_id:
          type: string
          maxLength: 128
          example: 3f2ccbaf-b42a-486c-aab2-801cbfb4e6e6
          description: The request ID, this can be obtained from the attribution response header x-transaction-id.
        claim_status:
          type: string
          enum:
            - validated_claim
            - not_accepted
          example: validated_claim
          description: The state of the claim, was it used or not accepted?
        fail_reason:
          type: string
          enum:
            - attribution_settings_enforced
            - fraud_detected
            - min_time_to_reengagement_enforced
            - unknown
          example: fraud_detected
          description: If not used, why was the claim not accepted? This should be omitted if the claim_status is validated_claim.
      required:
        - request_id
        - claim_status
